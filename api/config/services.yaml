imports:
    - { resource: 'api_platform/filters/order-filter.yaml' }
    
services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $mediaPath:             '%env(resolve:AWS_SUBDOMAIN)%'
            $facebookClientId:      '%env(resolve:FACEBOOK_CLIENT)%'
            $facebookSecret:        '%env(resolve:FACEBOOK_SECRET)%'
            $facebookGraphVersion:  '%env(resolve:FACEBOOK_GRAPH_VERSION)%'
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Api\Action\:
        resource: '../src/Api/Action'
        tags: ['controller.service_arguments']

    App\Api\Listener\JsonExceptionResponseTransformerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    App\Api\Listener\JWTCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }
    
    #app.images.s3:
    #    class: Aws\S3\S3Client
    #    arguments:
    #        - version: '%env(resolve:VERSION)%'
    #          region: '%env(resolve:REGION)%'
    #          endpoint: '%env(resolve:ENDPOINT)%'
    #          credentials:
    #              key: '%env(resolve:KEY)%'
    #              secret: '%env(resolve:SECRET)%'

    Aws\S3\S3Client:
        arguments:
            -
                version: '2006-03-01' # or 'latest'
                region: "eu-west-3" # 'eu-central-1' for example
                credentials:
                    key: '%env(AWS_S3_ACCESS_ID)%'
                    secret: '%env(AWS_S3_ACCESS_SECRET)%'

    App\Swagger\Decorator\ApiNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'